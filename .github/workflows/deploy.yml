name: 🚀 Build, Test & Deploy Spring Boot to Render

on:
  push:
    branches: [main]

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupération du code
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4

      # Étape 2 : Setup Java (point clé DevOps)
      - name: ☕ Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Étape 3 : Build + Tests (élément clé à montrer)
      - name: 🛠️ Build and Test with Maven
        run: mvn clean package # Retirez "-DskipTests" pour la démo !

      # Étape 4 : Construction de l'image Docker
      - name: 🐳 Build Docker Image
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/springboot-app:${{ github.sha }}
        run: |
          docker build -t $DOCKER_IMAGE .

      # Étape 5 : Push sur DockerHub (montrer la centralisation des artefacts)
      - name: ⬆️ Push Docker Image
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/springboot-app:${{ github.sha }}
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push $DOCKER_IMAGE

      # Étape 6 : Déploiement sur Render (via webhook)
      - name: 🚀 Deploy to Render
        run: |
          echo "✅ Déclenchement du déploiement sur Render..."
          curl -X POST -o render-deploy.log ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          echo "📝 Logs de déploiement :"
          cat render-deploy.log